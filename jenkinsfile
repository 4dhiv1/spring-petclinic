pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/4dhiv1/spring-petclinic.git'
            }
        }

        stage('Maven Build') {
            steps {
                sh 'mvn validate'
                sh 'mvn compile'
                sh 'mvn test'
                sh 'mvn package'
            }
        }

        stage('SonarCloud Analysis') {
            environment {
                SCANNER_HOME = tool 'sonar-scanner' // Matches tool config in Jenkins
            }
            steps {
                withSonarQubeEnv('sonarserver') {
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.organization=sonarproject456 \
                        -Dsonar.projectName=jenkins \
                        -Dsonar.projectKey=sonarproject456_jenkins789 \
                        -Dsonar.sources=src \
                        -Dsonar.java.binaries=target/classes \
                        -Dsonar.host.url=https://sonarcloud.io
                    '''
                }
            }
        }

        stage('Publish Sonar Report') {
            steps {
                echo 'Publishing SonarCloud report...'
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh '''
                        mvn clean verify sonar:sonar \
                        -Dsonar.projectKey=sonarproject456_jenkins789 \
                        -Dsonar.organization=sonarproject456 \
                        -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.login=$SONAR_TOKEN \
                        -Dsonar.qualitygate.wait=false
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t azconreg25.azurecr.io/spring-app:latest .'
            }
        }

        stage('Push to ACR') {
            steps {
                sh 'docker login azconreg25.azurecr.io -u azuredocker -p Password@123'
                sh 'docker push azconreg25.azurecr.io/spring-app:latest'
            }
        }

        stage('Deploy to AKS') {
            steps {
                sh 'kubectl apply -f k8s/deployment.yaml'
                sh 'kubectl apply -f k8s/service.yaml'
            }
        }
    }
}
